---
- name: disable testing
  set_fact:
    proxy_no_guardrails: true
  tags:
    - no_testing

- name: configure | allowing proxy to listen on stats port
  when: ansible_selinux.status == 'enabled'
  seport:
    ports: "{{ stats_port }}"
    proto: tcp
    setype: tor_port_t

- name: configure | enabling SELinux booleans for proxy
  when: ansible_selinux.status == 'enabled'
  seboolean:
    name: haproxy_connect_any
    state: true
    persistent: true

- name: configure | open firewall for relevant connections
  blockinfile:
    path: /etc/sysconfig/iptables
    insertbefore: -A INPUT -j REJECT
    marker: "# {mark} DS MANAGED BLOCK (proxy filter)"
    block: |
      -A INPUT -m state --state UNTRACKED -j ACCEPT
      {% for host in stats_client_hosts %}
      {%   set addr = host if host | ipaddr else lookup('dig', host) %}
      -A INPUT -m state --state NEW -s {{ addr }} -p tcp --dport {{ stats_port }} -j ACCEPT
      {% endfor %}
  notify:
    - reload firewall

- name: configure | disable conntrack for proxied connections
  blockinfile:
    path: /etc/sysconfig/iptables
    marker: "# {mark} DS MANAGED BLOCK (proxy raw)"
    block: |
      *raw
      {% for host in irods_client_hosts %}
      {%   set addr = host if host | ipaddr else lookup('dig', host) %}
      -A PREROUTING -s {{ addr }} -p tcp --dport {{ irods_port }} -j NOTRACK
      -A OUTPUT -d {{ addr }} -p tcp --sport {{ irods_port }} -j NOTRACK
      {% endfor %}
      {% set irods_addr = irods_backend_host if irods_backend_host | ipaddr else lookup('dig', irods_backend_host) %}
      -A OUTPUT -d {{ irods_addr }} -p tcp --dport {{ irods_backend_port }} -j NOTRACK
      -A PREROUTING -s {{ irods_addr }} -p --sport {{ irods_backend_port }} -j NOTRACK
      {% for host in webdav_client_hosts %}
      {%   set addr = host if host | ipaddr else lookup('dig', host) %}
      -A PREROUTING -s {{ addr }} -p tcp --dport {{ webdav_port }} -j NOTRACK
      -A OUTPUT -d {{ addr }} -p tcp --sport {{ webdav_port }} -j NOTRACK
      -A PREROUTING -s {{ addr }} -p tcp --dport {{ webdav_tls_port }} -j NOTRACK
      -A OUTPUT -d {{ addr }} -p tcp --sport {{ webdav_tls_port }} -j NOTRACK
      {% endfor %}
      {% for host in webdav_backend_hosts %}
      {%   set addr = host if host | ipaddr else lookup('dig', host) %}
      -A OUTPUT -d {{ addr }} -p tcp --dport {{ webdav_port }} -j NOTRACK
      -A PREROUTING -s {{ addr }} -p tcp --sport {{ webdav_port }}  -j NOTRACK
      -A OUTPUT -d {{ addr }} -p tcp --dport {{ webdav_tls_port }} -j NOTRACK
      -A PREROUTING -s {{ addr }} -p tcp --sport {{ webdav_tls_port }}  -j NOTRACK
      {% endfor %}
      COMMIT
  notify:
    - reload firewall

- name: configure | place iRODS VIP list
  template:
    src: vip.lst.j2
    dest: /etc/haproxy/vip.lst
  notify:
    - reload haproxy

- name: configure | place haproxy config file
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  notify:
    - reload haproxy

# TODO place TLS certs
