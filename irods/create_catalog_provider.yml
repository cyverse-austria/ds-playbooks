---
- name: allow catalog service providers to talk to DBMS
  hosts: dbms
  become: true
  tasks:
    - name: enable notifications when not testing
      set_fact:
        notifications_enabled: true
      tags:
        - no_testing

    - name: allow communication with Postgres DBMS
      blockinfile:
        path: "{{ _irods_dbms_pg_hba }}"
        marker: "# {mark} DS IRODS MANAGED BLOCK"
        block: |
          {% for i in groups['irods_catalog'] %}
          {%   set addr = i if i|ipaddr else lookup('dig', i) %}
          {{   '%-7s %-15s %-15s %-23s %s'
                 | format('host', 'ICAT', hostvars[i]._irods_db_user, addr ~ '/32', 'md5') }}
          {% endfor %}
      notify:
        - reload postgresql

  handlers:
    - name: reload postgresql
      when: notifications_enabled | default(false)
      service:
        name: postgresql
        state: reloaded


- import_playbook: provision.yml


- name: provision additional for catalog service providers
  hosts: irods_catalog
  become: true
  vars:
    # NB: The rpm and yum bindings for the package module require Python 2 in
    #     Ansible 2.9.6
    ansible_python_interpreter: /usr/bin/python
    odbc_description: "{{
      lookup('ini', 'Description file=files/postgresql-odbc-tmpl.ini section=PostgreSQL') }}"
    odbc_driver: "{{
      lookup('ini', 'Driver file=files/postgresql-odbc-tmpl.ini section=PostgreSQL') }}"
    odbc_setup: "{{
      lookup('ini', 'Setup file=files/postgresql-odbc-tmpl.ini section=PostgreSQL') }}"
  tasks:
    - name: configure linux kernel
      sysctl:
        name: kernel.{{ item.name }}
        value: "{{ item.value }}"
      with_items: "{{ _sysctl_kernel }}"
      tags:
        - no_testing

    - name: verify PostgreSQL client version is 9.3 or 12
      when: _irods_dbms_pg_version != '9.3' and _irods_dbms_pg_version != '12'
      fail:
        msg: Only PostgreSQL client versions 9.3 and 12 are supported

    - name: ensure PostgreSQL 9.3 clients are installed
      when: _irods_dbms_pg_version == '9.3'
      yum:
        name:
          - https://download.postgresql.org/pub/repos/yum/9.3/redhat/rhel-7-x86_64/postgresql93-libs-9.3.25-1PGDG.rhel7.x86_64.rpm
          - https://download.postgresql.org/pub/repos/yum/9.3/redhat/rhel-7-x86_64/postgresql93-9.3.25-1PGDG.rhel7.x86_64.rpm
          - https://download.postgresql.org/pub/repos/yum/9.3/redhat/rhel-7-x86_64/postgresql93-odbc-10.03.0000-1PGDG.rhel7.x86_64.rpm

    - when: _irods_dbms_pg_version == '12'
      block:
        - name: ensure PostgreSQL 12 repo is installed
          yum:
            name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm

        - name: ensure PostgreSQL 12 clients are installed
          package:
            name:
              - postgresql12
              - postgresql12-odbc
            state: present

        - name: add postgres 12 clients to path
          copy:
            src: "{{ item }}"
            dest: /etc/profile.d
          with_fileglob:
            - "files/profile.d/*"

        - name: define PostgreSQL 12 ODBC Driver
          shell: |
            if driverDef="$(odbcinst -q -d -n PostgreSQL)"; then
              description="$(sed --quiet 's/^Description=//p' <<< "$driverDef")"
              driver="$(sed --quiet 's/^Driver=//p' <<< "$driverDef")"
              setup="$(sed --quiet 's/^Setup=//p' <<< "$driverDef")"
              if [[ "$description" == 'PostgreSQL 12 ODBC Driver' \
                && "$driver" == '/usr/pgsql-12/lib/psqlodbc.so' \
                && "$setup" == '/usr/pgsql-12/lib/psqlodbcw.so' ]]
              then
                exit 0
              fi
            fi
            if ! odbcinst -i -d -r -v; then
              exit 1
            fi
            echo changed
          args:
            stdin: "{{ lookup('file', 'files/postgresql-odbc-tmpl.ini') }}"
          register: result
          changed_when: result.stdout == 'changed'

    - name: ensure required packages are installed
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - mailx
        - parallel

    - name: ensure pika installed
      pip:
        name: pika<1.2
        state: present

    - import_tasks: tasks/install_ies_pkgs.yml

    - import_tasks: tasks/install_plugins.yml


- import_playbook: cfg_irods.yml


- name: start iRODS on catalog service providers
  hosts: irods_catalog
  become: "{{ _become_svc_acnt }}"
  become_user: "{{ _irods_service_account_name }}"
  become_flags: '-i'
  gather_facts: false
  tasks:
    - name: start iRODS
      irods_ctl:

    - name: authenticate clerver
      irods_clerver_auth:
        provider: "{{ inventory_hostname }}"
        password: "{{ _irods_clerver_password }}"


- import_playbook: irods_runtime_init.yml


- import_playbook: bisque_usage.yml
