#!/bin/bash
# -*- coding: utf-8 -*- ## only needed for python modules
#
# An ansible module for managing iRODS user TYPEs. At the moment, it can only
# create them.
#
# Module Name:
#  irods_user_TYPE
#
# Required Variables:
#  TYPE  the TYPE of user to create
#
# Optional Variables:
#  DESCRIPTION  the DESCRIPTION of the user TYPE

# WANT_JSON

main()
{
  local VARFILE="$1"
  local TYPE=$(cat ${VARFILE} | jq -r ".type")
  local DESCRIPTION=$(cat ${VARFILE} | jq -r ".description")
  RUN_USER=$(cat ${VARFILE} | jq -r ".runas")
  
  local ID=$(question "select TOKEN_ID where TOKEN_NAMESPACE = 'user_type' and TOKEN_NAME = '${TYPE}'")
  if [ -z ${ID} ]; then
    local ERR_MSG
    if ! ERR_MSG=$(sudo -u ${RUN_USER} iadmin at user_type "${TYPE}" "" "${DESCRIPTION}" ); then
      fail "${ERR_MSG}"
    fi
    changed="true"
  else
    local CUR_DESCRIPTION
    CUR_DESCRIPTION=$(question "select TOKEN_VALUE2 where TOKEN_ID = '${ID}'")
    if [ "${DESCRIPTION}" != "${CUR_DESCRIPTION}" ]; then
      fail "user type ${TYPE} already in use for another purpose"
    fi
  fi
  endoutput
}
#
question()
{
  local RESPONSE=$(sudo -u ${RUN_USER} iquest --no-page '%s' "${*}")
  if [ -z "${RESPONSE}" ]; then
    fail "${RESPONSE}"
  elif ! [[ "${RESPONSE}" =~ ^CAT_NO_ROWS_FOUND ]]; then
    printf '%s' "${RESPONSE}"
  elif [[ "${RESPONSE}" =~ ^CAT_NO_ROWS_FOUND ]]; then
    echo ""
  fi
}

#
fail()
{
  rc="1"
  msg="$*"
}
#
endoutput()
{
  # restoring stdout and stderr
  exec 1>&3 2>&4
  stderr="$(cat ${STDERRFILE})"
  stdout="$(cat ${STDOUTFILE})"
  jq -M -n \
    --argjson changed "$changed" \
    --argjson rc "$rc" \
    --arg stderr "$stderr" \
    --arg stdout "$stdout" \
    --arg msg "$msg" \
    '$ARGS.named'
  exit ${rc}
}
#
set -e
changed="false"
rc=0
stdout=""
stderr=""
msg=""
STDOUTFILE=/tmp/XXX
STDERRFILE=/tmp/YYY
exec 4>&2 3>&1 2>${STDERRFILE} 1>${STDOUTFILE}
trap 'rm -f ${STDERRFILE} ${STDOUTFILE}' 0 1 2 3
main "$@"
