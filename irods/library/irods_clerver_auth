#!/bin/bash
#
# An ansible module for initializing the clerver connection to the catalog 
# service providers.
#
# Module Name:
#  irods_clerver_auth
#
# Required Variables:
#  password  the password used by the clerver to connect
#
# Optional Variables:
#  provider  The FQDN of the iRODS server. If this isn't provided, it assumes 
#            the local host is the server.

main()
{
  local varFile="$1"

  local provider
  local password
  . "$varFile"

  require password

  local authFile
  authFile=$(iinit -l | sed --quiet 's/^NOTICE: irods_authentication_file - //p')

  if [ -z "$authFile" ]
  then
    authFile="$HOME"/.irods/.irodsA
  fi

  if [ -e "$authFile" ]
  then
    succeed false
  fi

  if [ -n "$provider" ]
  then
    export IRODS_HOST="$provider"
  fi

  local errMsg
  if ! errMsg=$(iinit "$password" 2>&1)
  then
    fail "$errMsg"
  fi

  succeed true
}


require()
{
  local var="$1"

  if [ -z "${!var}" ]
  then
    fail "variable '$var' must be defined"
  fi
}


fail()
{
  local msg="$*"

  # shellcheck disable=SC2016
  stderr="$(cat ${stderrfile})"
  stdout="$(cat ${stdoutfile})"
  exec 1>&3
  jq --compact-output --monochrome-output --null-input --arg msg "$msg" \
    --arg stderr "${stderr}" \
    --arg stdout "${stdout}" \
    '$ARGS.named'
    # >&2
     # '{failed: true, msg: $msg}' \

  exec 2>&4
  exit 1
}


succeed()
{
  local changed="$1"

  stderr="$(cat ${stderrfile})"
  stdout="$(cat ${stdoutfile})"
  # shellcheck disable=SC2016
  exec 1>&3
  jq --compact-output --monochrome-output --null-input --arg changed "$changed" \
    --arg stderr "${stderr}" \
    --arg stdout "${stdout}" \
    '$ARGS.named'
    # >&2
     # '{changed: ($changed == "true")}' \

  exec 2>&4
  exit 0
}


set -e
changed="false"
rc=0
stdout=""
stderr=""
msg=""
stderrfile="/tmp/stderr"
stdoutfile="/tmp/stdout"
trap 'exec 1>&3 2>&4' 0 1 2 3
exec 3>&1 4>&2
exec 1>${stdoutfile}
exec 2>${stderrfile}
# trap 'rm -f ${tmpfstderr}' 0 1 2 3
# main "$@" 2>&1
main "$@"
