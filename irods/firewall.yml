---
- name: update the firewall
  hosts: irods:!unmanaged_systems
  become: true
  vars:
    ports: "{{ _irods_server_port_range_start }}:{{ _irods_server_port_range_end }}"
  tags:
    - firewall
    - no_testing
  tasks:
    - name: add firewall rules
      blockinfile:
        path: "{{
          '/etc/iptables/rules.v4' if ansible_distribution == 'Ubuntu' else
          '/etc/sysconfig/iptables' }}"
        insertbefore: (-A {{ _firewall_chain }} -j REJECT|COMMIT)
        marker: "# {mark} DS MANAGED BLOCK (irods)"
        block: |
          {% for i in groups['irods'] %}
          {%   set addr = i if i|ipaddr else lookup('dig', i) %}
          {%   if inventory_hostname != i %}
          -A {{ _firewall_chain }} -m state --state NEW -p tcp -s {{ addr }} --dport {{ _irods_zone_port }} -j ACCEPT
          -A {{ _firewall_chain }} -m state --state NEW -p tcp -s {{ addr }} --dport {{ _irods_server_control_plane_port }} -j ACCEPT
          -A {{ _firewall_chain }} -m state --state NEW -p tcp -s {{ addr }} --dport {{ ports }} -j ACCEPT
          {%     if inventory_hostname in groups['irods_resource'] %}
          -A {{ _firewall_chain }} -m state --state NEW -p udp -s {{ i if i|ipaddr else lookup('dig', i) }} --dport {{ ports }} -j ACCEPT
          {%     endif %}
          {%   endif %}
          {% endfor %}
          {% for f in _irods_federation %}
          {%   for cp in f.catalog_provider_hosts %}
          {%     set cp_addr = cp if cp|ipaddr else lookup('dig', cp) %}
          -A {{ _firewall_chain }} -m state --state NEW -p tcp -s {{ cp_addr }} --dport {{ _irods_zone_port }} -j ACCEPT
          -A {{ _firewall_chain }} -m state --state NEW -p tcp -s {{ cp_addr }} --dport {{ ports }} -j ACCEPT
          -A {{ _firewall_chain }} -m state --state NEW -p udp -s {{ cp_addr }} --dport {{ ports }} -j ACCEPT
          {%   endfor %}
          {% endfor %}
          -A {{ _firewall_chain }} -m state --state NEW -p tcp -s {{ _irods_allowed_clients }} --dport {{ _irods_zone_port }} -j ACCEPT
          -A {{ _firewall_chain }} -m state --state NEW -p tcp -s {{ _irods_allowed_clients }} --dport {{ ports }} -j ACCEPT
          {% if inventory_hostname in groups['irods_resource'] %}
          -A {{ _firewall_chain }} -m state --state NEW -p udp -s {{ _irods_allowed_clients }} --dport {{ ports }} -j ACCEPT
          {% endif %}
      notify:
        - restart firewall

  handlers:
    - name: restart firewall
      service:
        name: "{{ 'netfilter-persistent' if ansible_distribution == 'Ubuntu' else 'iptables' }}"
        state: restarted
