---
- name: retrieve installed package info
  package_facts:

- name: test ensure netcdf plugins not installed
  assert:
    that:
      - not "{{ item }}" in ansible_facts.packages
  with_items:
    - irods-icommands-netcdf
    - irods-microservice-plugin-netcdf
    - irods-api-plugin-netcdf

- name: test ensure netcdf rpms removed
  stat:
    path: /root/{{ item }}-1.0-centos{{ ansible_distribution_major_version }}.rpm
  register: response
  failed_when: response.stat.exists
  with_items:
    - irods-icommands-netcdf
    - irods-microservice-plugin-netcdf
    - irods-api-plugin-netcdf

- include_tasks: test_pkg_installed.yml
  vars:
    pkg: irods-runtime
    version: 4.2.8
  with_items:
    - irods-netcdf-client_modules
    - irods-netcdf-icommands
    - irods-netcdf-server_modules

- name: test lock irods NetCDF package to 4.2.8.0
  shell: |
    set -o pipefail
    if ! yum versionlock status | grep --quiet '{{ item }}'; then
      printf '{{ item }} not locked\n' >&2
      exit 1
    elif info="$(yum --quiet list installed '{{ item }}' | tail --lines=+2)"; then
      readarray -t versions <<< "$info"
      for version in "${versions[@]}"; do
        read _ verNum _ <<< "$version"
        if ! [[ "$verNum" =~ 4\.2\.8\.0 ]]; then
          printf 'found version %s\n' "$verNum" >&2
          exit 1
        fi
      done
    fi
  changed_when: false
  with_items:
    - irods-netcdf-client_modules
    - irods-netcdf-icommands
    - irods-netcdf-server_modules

- name: test ensure msiSetAVU microservice is absent
  stat:
    path: /var/lib/irods/plugins/microservices/libmsiSetAVU.so
  register: response
  failed_when: response.stat.exists
