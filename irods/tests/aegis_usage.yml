---
- name: test create aegis vault
  hosts: dstesting_consumer_configured_1.dstesting_default
  tasks:
    - name: test create vault directory
      stat:
        path: /var/lib/irods/aegis_vault
        follow: true
      register: info
      failed_when: >-
        not info.stat.exists
        or info.stat.pw_name != 'irods'
        or info.stat.gr_name != 'irods'
        or not info.stat.rusr or not info.stat.wusr or not info.stat.xusr
        or not info.stat.rgrp or not info.stat.wgrp or not info.stat.xgrp
        or info.stat.roth or info.stat.woth or info.stat.xoth


- name: test configure iRODS for Aegis
  hosts: ies
  become: true
  become_user: irods
  run_once: true
  tasks:
    - name: test create storage resource
      shell: |
        set -o errexit
        rescInfo="$(ilsresc -l aegis)"
        grep --quiet 'type: unixfilesystem' <<< "$rescInfo"
        grep --quiet 'location: dstesting_consumer_configured_1.dstesting_default' <<< "$rescInfo"
        grep --quiet 'vault: /var/lib/irods/aegis_vault' <<< "$rescInfo"
        grep --quiet 'context: minimum_free_space_for_create_in_bytes=1048576' <<< "$rescInfo"
        grep --quiet 'status: down' <<< "$rescInfo"
        grep --quiet --regex 'free space: [0-9]' <<< "$rescInfo"
      changed_when: false

    - name: test ensure base collection exists
      shell: ils /testing/home/shared/aegis
      changed_when: false

    - name: test create resource hierarchy
      shell: |
        set -o errexit
        rescInfo="$(ilsresc aegisRes)"
        grep --quiet 'aegisRes:passthru' <<< "$rescInfo"
        grep --quiet ' aegis:' <<< "$rescInfo"
      changed_when: false

    - name: test assign collection to resource
      shell: |
        iquest \
            '%s %s' \
            "select META_RESC_ATTR_VALUE, META_RESC_ATTR_UNITS 
              where RESC_NAME = 'aegisRes' and META_RESC_ATTR_NAME = 'ipc::hosted-collection'" \
          | grep --quiet '/testing/home/shared/aegis required'
      changed_when: false
      

- name: test remove aegis related rules
  hosts: irods
  become: true
  become_user: irods
  tasks:
    - name: test remove aegis-specific replication logic
      shell: grep --invert --quiet aegis /etc/irods/ipc-repl.re
      changed_when: false

    - name: test remove include from ipc-custom.re
      shell: grep --invert --quiet aegis /etc/irods/ipc-custom.re
      changed_when: false

    - name: test remove aegis rule bases
      stat:
        path: /etc/irods/{{ item }}
      register: info
      failed_when: info.stat.exists
      with_items:
        - aegis.re
        - aegis-env.re