---
- name: test provision for iRODS
  hosts: irods:!unmanaged_systems
  become: true
  vars:
    group_name: >-
      {{ 'irods_provider' if inventory_hostname in groups['irods_catalog'] else 'irods' }}
  tasks:
    - when: ansible_distribution == 'CentOS'
      block:
        # NB: The rpm and yum bindings for the package module require Python 2
        #     in Ansible 2.10.15
        - name: CentOS | set correct python for ansible
          set_fact:
            ansible_python_interpreter: /usr/bin/python


        - name: CentOS | test install iRODS package repository signing key
          shell: |
            rpm --query --queryformat='%{SUMMARY}\n' gpg-pubkey | grep --quiet 'iRODS Consortium'
          changed_when: false

        - name: CentOS | test install iRODS repository
          stat:
            path: /etc/yum.repos.d/renci-irods.yum.repo
          register: resp
          failed_when: not resp.stat.exists

        - name: CentOS | test lock irods package to required version
          shell: |
            if ! yum versionlock status | grep --quiet '{{ item }}'; then
              printf '{{ item }} not locked\n' >&2
              exit 1
            elif info="$(yum --quiet list installed '{{ item }}' | tail --lines=+2)"; then
              readarray -t versions <<< "$info"
              for version in "${versions[@]}"; do
                read _ verNum _ <<< "$version"
                if ! [[ "$verNum" =~ 4\.2\.8 ]]; then
                  printf 'found version %s\n' "$verNum" >&2
                  exit 1
                fi
              done
            fi
          changed_when: false
          with_items:
            - irods-icommands
            - irods-runtime
            - irods-server
            
        - include_tasks: tasks/test_pkg_installed.yml
          with_items:
            - uuidd
            - which
          loop_control:
            loop_var: pkg

    - when: ansible_distribution == 'Ubuntu'
      block:
        - name: Ubuntu | test install iRODS package repository signing key
          shell: apt-key list | grep --quiet 'iRODS Consortium'
          changed_when: false

        - name: Ubuntu | test install iRODS repository
          stat:
            path: /etc/apt/sources.list.d/renci-irods.list
          register: resp
          failed_when: not resp.stat.exists

        - name: Ubuntu | test update apt cache
          shell: apt-cache policy | grep --quiet packages.irods.org
          changed_when: false

        - name: Ubuntu | test lock iRODS packages to required version
          shell: apt-cache policy | grep --quiet '{{ item }} -> 4.2.8 with priority 1001'
          changed_when: false
          with_items:
            - irods-icommands
            - irods-runtime
            - irods-server

        - include_tasks: tasks/test_pkg_installed.yml
          with_items:
            - debianutils
            - uuid-runtime
          loop_control:
            loop_var: pkg

    - include_tasks: tasks/test_pkg_installed.yml
      vars:
        pkg: irods-server
        version: 4.2.8
        
    - name: test create service group
      command:
        cmd: sed --quiet 's/^{{ group_name }}:x:\([0-9]\+\):.*/\1/p' /etc/group
        warn: false
      register: gid_resp
      changed_when: false
      failed_when: gid_resp.stdout|length == 0

    - name: verify that the system user has correct comment
      command:
        cmd: >
          grep --quiet --regexp '^irods:x:[0-9]*:{{ gid_resp.stdout }}:iRODS Administrator:'
          /etc/passwd
      changed_when: false

    - name: verify that system user belongs to tty group
      command:
        cmd: grep --quiet --regexp '^tty:x:[0-9]*:\(.\+,\)\?irods\(,.\+\)\?$' /etc/group
      changed_when: false
